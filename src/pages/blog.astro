---
import { getCollection } from "astro:content";
import Layout from "../layouts/PageLayout.astro";
import Title from "../components/blog/Title.astro";

const blogEntries = (await getCollection("blog"))
  .filter((post) => !post.data.draft)
  .sort((a, b) => +b.data.date - +a.data.date);
const articles = blogEntries.filter((entry) =>
  entry.data.tags.includes("article")
);
const tutorials = blogEntries.filter((entry) =>
  entry.data.tags.includes("tutorial")
);
const rest = blogEntries.filter(
  (v) => !articles.includes(v) && !tutorials.includes(v)
);
if (rest.length) {
  throw new Error(
    `Expected all blog entries to either be articles or tutorials, but found additional:\n${rest
      .map((v) => v.id)
      .join("\n")}`
  );
}
---

<Layout title="Blog - Johan Fagerberg" active="blog">
  <Title>My blog</Title>
  <h2>Articles</h2>
  <ul class="post-list">
    {
      articles.map((entry) => (
        <li>
          <a href={`${entry.slug}/`} class="post">
            <span class="post-background" />
            <span class="post-title">{entry.data.title}</span>
            <time class="post-date">
              {entry.data.date.toLocaleDateString("en-US", {
                year: "numeric",
                month: "short",
                day: "2-digit",
              })}
            </time>
          </a>
        </li>
      ))
    }
  </ul>
  <h2>Tutorials</h2>
  <ul class="post-list">
    {
      tutorials.map((entry) => (
        <li>
          <a href={entry.slug} class="post">
            <span class="post-background" />
            <span class="post-title">{entry.data.title}</span>
            <time class="post-date">
              {entry.data.date.toLocaleDateString("en-US", {
                year: "numeric",
                month: "short",
                day: "2-digit",
              })}
            </time>
          </a>
        </li>
      ))
    }
  </ul>
</Layout>
<style>
  .post-list {
    list-style: none;
    padding: 0;
    margin-block-end: 8rem;

    display: flex;
    flex-direction: column;
  }
  .post {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: space-between;
    column-gap: 0.25rem;
    padding: 1rem 0;
    background-image: none !important; /* remove the underline, which normally applies to links */
  }
  .post-background {
    position: absolute;
    z-index: -10;
    inset: 0 -1rem;
    border-radius: 0.75rem;
    background: var(--c-text);
    transform: scale(0.95);
    transform-origin: 50% 50%;
    opacity: 0;
    transition-property: opacity, transform;
    transition-duration: 150ms;
  }
  .post:hover .post-background {
    transform: scale(1);
    opacity: 0.05;
  }
  .post-title {
    font-weight: 500;
  }
  .post-date {
    flex-shrink: 0;
    color: var(--c-text-secondary);
  }
</style>
