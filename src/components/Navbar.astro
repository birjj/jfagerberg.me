---
import { Icon } from "astro-icon";
import DarkModeToggle from "./navbar/DarkModeToggle";

export interface Props extends astroHTML.JSX.HTMLAttributes {
  active?: "home" | "blog" | "none";
}

const { active = "home", ...props } = Astro.props;
---

<header
  class="transition z-50 backdrop-blur-[8px] bg-background/90 border-y sticky top-[-1px]"
>
  <div
    {...props}
    class=`font-headings px-4 sm:px-15vw mx-auto h-12 flex flex-row items-stretch ${props.class || ""}`
  >
    <TableOfContents
      client:load
      items={headings}
      scrollOffset={57}
      logoInactive={active !== "home"}
    >
      <Icon name="jfagerberg" class="w-8 h-8 rounded-full" slot="logo" />
    </TableOfContents>
    <a
      href="/blog/"
      class=`icon inline-flex items-center relative px-2 mr-1 ml-auto -mb-1 pb-1 ${active === "blog" ? "active" : ""}`
      arial-label="Navigate to blog index"
    >
      Blog
    </a>
    <div class="transition mx-2 my-4 border-r"></div>
    <a
      class="icon inline-flex items-center relative px-2 -mb-1 pb-1"
      href="https://github.com/birjj/"
      target="_blank"
      rel="noopener noreferrer"
      title="Visit GitHub profile"
    >
      <Icon name="simple-icons:github" class="w-6 h-6" />
    </a>
    <a
      class="icon inline-flex items-center relative px-2 -mb-1 pb-1"
      href="https://www.linkedin.com/in/johan-fagerberg-202527120/"
      target="_blank"
      rel="noopener noreferrer"
      title="Visit LinkedIn profile"
    >
      <Icon name="simple-icons:linkedin" class="w-6 h-6" />
    </a>
    <div class="transition mx-2 my-4 border-r"></div>
    <DarkModeToggle client:load />
  </div>
</header>

<style>
  /* each link is highlighted using 2 components:
    - the indicator (::before), and
    - the background (on ::after) */
  header :global(a::before) {
    @apply absolute left-1 right-1 bottom-1 h-px;
    content: "";
    box-shadow: 0 0 2px 1px var(--tw-shadow-color);
  }
  header :global(a::after) {
    @apply absolute left-0 right-0 top-0 bottom-1;
    content: "";
  }

  /* when active, the indicator actives in our accent color */
  header :global(a.active::before) {
    @apply bg-accent-700/75 shadow-accent-700/20;
  }
  header :global(a.active:hover::before) {
    @apply bg-accent-700;
  }

  /* when hovered, we also apply a very faint background for immediate feedback */
  header :global(:is(a, button):hover::after) {
    @apply bg-slate-400/10;
  }
</style>

<style>
  header {
    transition-property: background-color, color, border-color;
    transition-timing-function: var(--easing-default);
    transition-duration: var(--easing-default-duration);

    /* make the header slightly glass-like, with the normal page background */
    background: oklch(var(--c-background-oklch) / 90%);
    backdrop-filter: blur(8px);

    /* add borders to the top and bottom of the header (top is)
  }
</style>
