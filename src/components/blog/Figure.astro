---
/** Replacement for <figure> in blog posts */
export type Props = astroHTML.JSX.IntrinsicElements["figure"] & {
  "data-captionOnLeft"?: boolean;
};
const {
  "data-captionOnLeft": captionOnLeft = false,
  class: className,
  ...props
} = Astro.props;
---

<figure
  {...props}
  class:list={[className, captionOnLeft ? "caption-left" : "caption-right"]}
>
  <slot />
</figure>

<style>
  figure {
    margin: 1rem auto 2.25rem;
    position: relative;
    padding-left: 0;
    padding-right: 0;
  }
  @media (min-width: 45rem) {
    figure {
      margin-top: 1.5rem;
    }
  }
  /* clear floats, so asides don't mess with us too much */
  figure::before,
  figure::after {
    content: " ";
    display: table;
  }
  figure::after {
    clear: both;
  }

  figure > :global(figcaption) {
    font-size: 0.75rem;
    line-height: 1.33em;
    margin-top: 0.625rem;
    position: relative;
    color: var(--c-text-secondary, #666);
  }
  @media (min-width: 45rem) {
    figure > :global(figcaption) {
      font-size: 0.875rem;
      line-height: 1.28em;
    }
  }
  /* on very small displays, we display the caption inline with the article */
  @media (max-width: 45rem) {
    figure > :global(figcaption) {
      padding-left: var(--article-inset);
      padding-right: var(--article-inset);
    }
  }
  /* on very wide displays, we display the :where(figure :global(figcaption)) next to the figure */
  @media (min-width: 90rem) {
    figure > :global(figcaption) {
      --figcap-margin: 1.25rem;
      bottom: 0;
      position: absolute;
      width: 9.375rem;
    }
    .caption-right > :global(figcaption) {
      left: 100%;
      margin-left: var(--figcap-margin);
    }
    .caption-left > :global(figcaption) {
      right: 100%;
      margin-right: var(--figcap-margin);
      text-align: right;
    }
  }
</style>
