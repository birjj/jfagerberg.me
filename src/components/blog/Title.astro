---
/** Replacement for <h1> in blog posts */
export type Props = { noDot?: boolean } & astroHTML.JSX.IntrinsicElements["h1"];
const { class: className, noDot = false, ...props } = Astro.props;
---

<h1 {...props} class:list={[className, "heading"]}>
  <slot />{noDot ? null : <span class="dot">.</span>}
</h1>
{
  Astro.slots.has("subheading") && (
    <p class="subheading">
      <slot name="subheading" />
    </p>
  )
}

<style>
  .heading {
    font-size: 2.25rem;
    font-weight: 600;
    line-height: 1.167em;
    margin-bottom: 1.5rem;
    margin-top: 0;
  }
  @media (min-width: 45rem) {
    .heading {
      font-size: 2.5rem;
      line-height: 1.125em;
      margin-bottom: 2rem;
    }
  }
  @media (min-width: 60rem) {
    .heading {
      font-size: 3rem;
      line-height: 1.1em;
    }
  }

  .dot {
    color: var(--c-accent);
  }

  .subheading {
    color: var(--c-text, #333);
    font-size: 1.125rem;
    font-weight: 400;
    line-height: 1.33em;
    margin: 0.625rem 0;
  }
  @media (min-width: 45rem) {
    .subheading {
      font-size: 1.5rem;
      line-height: 1.25em;
    }
  }
</style>
