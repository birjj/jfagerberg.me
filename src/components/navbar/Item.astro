---
export type Props = astroHTML.JSX.IntrinsicElements["a"] & {
  active?: boolean;
  title: Required<astroHTML.JSX.IntrinsicElements["a"]["title"]>;
};

const { active = false, class: className, ...props } = Astro.props;
---

<a {...props} class:list={[className, active && "active"]}>
  <slot />
</a>

<style>
  a {
    position: relative;
    display: inline-flex;
    align-items: center;
    padding-inline: 0.5rem;

    color: inherit;
    text-decoration: none;
    background-image: none;
  }
  a:hover,
  a:focus-visible {
    background-color: oklch(var(--c-text-oklch) / 5%);
    background-image: none;
  }

  /* the active link is highlighted using an underline pseudo-element (::before) */
  .active::before {
    content: "";

    position: absolute;
    left: 0.25rem;
    right: 0.25rem;
    bottom: 0;
    height: 1px;

    box-shadow: 0 0 2px 1px oklch(var(--c-accent-oklch) / 20%);
    background-color: oklch(var(--c-accent-oklch) / 75%);
  }
  .active:hover::before,
  .active:focus-visible::before {
    background-color: var(--c-accent);
  }
</style>
